plugins {
    id 'version-catalog'
    id 'maven-publish'
}

def isBranch = project.hasProperty('branch')
def isMainBranch = isBranch && (project.getProperty('branch') == 'master' || project.getProperty('branch') == 'main')
def isRelease = project.findProperty('release') == 'true'
ext {
    versionSuffix = (isBranch && !isMainBranch && !isRelease ? ('-' + project.getProperty('branch')) : '') + (!isRelease ? '-SNAPSHOT' : '')
}

group = 'de.interactive_instruments'

version = '5.4.0' + versionSuffix

def libz = rootProject.extensions
        .getByType(VersionCatalogsExtension).named("libs")

catalog {
    versionCatalog {
        libz.getVersionAliases().each {
            version(it, "${libz.findVersion(it).get().displayName}")
        }
        libz.getPluginAliases().each {
            plugin(it, "${libz.findPlugin(it).get().get().pluginId}").version("${libz.findPlugin(it).get().get().version}")
        }
        libz.getLibraryAliases().each {
            library(it, "${libz.findLibrary(it).get().get()}")
        }
        libz.getBundleAliases().each {
            bundle(it, libz.findBundle(it).get().get().collect { it.name })
        }
    }
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://dl.interactive-instruments.de/repository/maven-releases/"
            def snapshotsRepoUrl = "https://dl.interactive-instruments.de/repository/maven-snapshots/"

            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.findProperty('deployUser') ?: ''
                password project.findProperty('deployPassword') ?: ''
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.versionCatalog
        }
    }
}

subprojects { subproject ->
    apply plugin: 'java-gradle-plugin'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'

    group = 'de.interactive_instruments'

    version = '5.4.0' + versionSuffix

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    publishing {
        repositories {
            maven {
                def releasesRepoUrl = "https://dl.interactive-instruments.de/repository/maven-releases/"
                def snapshotsRepoUrl = "https://dl.interactive-instruments.de/repository/maven-snapshots/"

                url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username project.findProperty('deployUser') ?: ''
                    password project.findProperty('deployPassword') ?: ''
                }
            }
        }
    }
}
