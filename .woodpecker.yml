pipeline:

  load-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    restore: true
    mount:
      - .gradle/caches
      - .gradle/wrapper

  build:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew build -Psnapshot=true
    when:
      event: [push]

  build-release:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew build
    when:
      event: tag

  publish-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew publish -Psnapshot=true -PdeployUser=$DEPLOY_USER -PdeployPassword=$DEPLOY_PASSWORD
    secrets: [ deploy_user, deploy_password]
    when:
      event: push
      branch: main

  publish-release:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew publish -PdeployUser=$DEPLOY_USER -PdeployPassword=$DEPLOY_PASSWORD
    secrets: [ deploy_user, deploy_password]
    when:
      event: tag

  save-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    rebuild: true
    mount:
      - .gradle/caches
      - .gradle/wrapper

